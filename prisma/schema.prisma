// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  createdAt DateTime @default(now())
  cvs       CV[]    // One-to-many relationship
  subscriptions Subscription[] // One-to-many relationship
  freeTrialUsed Int @default(3) // Indicates if the user has used the free trial
  hasSubscription Boolean @default(false) // Indicates if the user has an active subscription
}
model Subscription {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  plan        String   // e.g., "free", "premium"
  status      String   // e.g., "active", "cancelled"
  startDate   DateTime @default(now())
  endDate     DateTime? // Optional end date for the subscription
  lastPayment DateTime? // Optional last payment date
  trialEndDate DateTime? // Optional trial end date
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId, status])
}
model CV {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  cvType      String
  jobPost     String
  personalInfo Json
  education    Json
  experience   Json
  skills       Json
  projects     Json
  certifications Json
  languages     Json
  createdAt   DateTime @default(now())
  pdfcvUrl      String?  // Optional URL for the generated PDF
  pdfcoverUrl String? // Optional URL for the generated cover letter PDF

}

model GuestUsage {
  id          Int       @id @default(autoincrement())
  ip          String    @unique
  fingerprint String?   // Optional browser fingerprint
  location    String?   // Optional location info
  hasCreatedCV Boolean  @default(false)
  createdAt   DateTime  @default(now())
  expiresAt   DateTime? // Optional expiration (24h from creation)

  @@index([ip, hasCreatedCV])
  @@index([expiresAt])
}
